/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.Invoice;
import model.Lodgement;
import model.Reservation;
import model.User;


/**
 *
 * @author usuario
 */


public class PayForm extends javax.swing.JFrame {
    
    /**
     * Creates new form CheckIn
     */
    public User user;
    
    public PayForm(User user) {
        initComponents();
        
        this.user = user;

        refreshTables();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    public void refreshTables(){
        //set not paid

        DefaultTableModel tableModel = (DefaultTableModel) tableNotPaid.getModel();
        tableModel.setRowCount(0);
        for (Reservation reservation : user.getReservationHistory()) {
            if (reservation.getReservationState() == Reservation.ReservationState.WaitingPayment) {
                tableModel.addRow(new Object[]{reservation.getId(), reservation.getTotalPrice(), reservation.getLodgement().getName()});
            }
        }
        
        if (tableModel.getRowCount() == 0) {
            tableModel.addRow(new Object[] {"No hay reservas"});
        }
        
        //set paid
        tableModel = (DefaultTableModel) tablePaid.getModel();
        tableModel.setRowCount(0);
        for (Reservation reservation : user.getReservationHistory()) {
            if (reservation.getReservationState() == Reservation.ReservationState.Paid) {
                tableModel.addRow(new Object[]{reservation.getId(), reservation.getTotalPrice(), reservation.getLodgement().getName()});
            }
        }
        
        if (tableModel.getRowCount() == 0) {
            tableModel.addRow(new Object[] {"No hay reservas"});
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tablePaid = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableNotPaid = new javax.swing.JTable();
        lblNotPaid = new javax.swing.JLabel();
        lblPaid = new javax.swing.JLabel();
        cbCreditCard = new javax.swing.JCheckBox();
        cbPaypal = new javax.swing.JCheckBox();
        btnPay = new javax.swing.JButton();
        lblInvoice = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablePaid.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Precio Total", "Alojamiento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablePaid);
        if (tablePaid.getColumnModel().getColumnCount() > 0) {
            tablePaid.getColumnModel().getColumn(0).setPreferredWidth(1);
            tablePaid.getColumnModel().getColumn(1).setResizable(false);
            tablePaid.getColumnModel().getColumn(1).setPreferredWidth(3);
            tablePaid.getColumnModel().getColumn(2).setResizable(false);
        }

        tableNotPaid.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Precio Total", "Alojamiento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableNotPaid);
        if (tableNotPaid.getColumnModel().getColumnCount() > 0) {
            tableNotPaid.getColumnModel().getColumn(0).setPreferredWidth(1);
            tableNotPaid.getColumnModel().getColumn(1).setResizable(false);
            tableNotPaid.getColumnModel().getColumn(1).setPreferredWidth(3);
        }

        lblNotPaid.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblNotPaid.setForeground(new java.awt.Color(255, 153, 0));
        lblNotPaid.setText("PENDIENTES DE PAGO");

        lblPaid.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblPaid.setForeground(new java.awt.Color(0, 153, 0));
        lblPaid.setText("PAGADAS");

        cbCreditCard.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbCreditCard.setText("Pagar con Tarjeta");

        cbPaypal.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbPaypal.setText("Pagar con PayPal");

        btnPay.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnPay.setText("Pagar");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel2.setText("BNB");
        jLabel2.setPreferredSize(new java.awt.Dimension(907, 622));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNotPaid))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPaid))
                .addGap(52, 52, 52))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(317, 317, 317)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbCreditCard)
                                .addGap(18, 18, 18)
                                .addComponent(cbPaypal))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(btnPay))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(lblInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(392, 392, 392)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNotPaid)
                    .addComponent(lblPaid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(lblInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbCreditCard)
                    .addComponent(cbPaypal))
                .addGap(18, 18, 18)
                .addComponent(btnPay)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        
        if (tableNotPaid.getSelectedRow() == -1) {
            return;
        }
        
        int sel = Integer.parseInt(tableNotPaid.getValueAt(tableNotPaid.getSelectedRow(), 0).toString());
        Reservation r = user.getReservationHistory().get(sel);
        
        if (tableNotPaid.getSelectedRowCount() > 1) {
            JOptionPane.showMessageDialog(null, "Por favor, solo seleccione una reserva para pagar.");
        } else if (cbCreditCard.isSelected() && cbPaypal.isSelected()) {
            JOptionPane.showMessageDialog(null, "Por favor, seleccione solo un método de pago.");
        } else if (cbCreditCard.isSelected()) {
            r.pay(Invoice.PaymentType.CreditCard);
        } else if (cbPaypal.isSelected()) {  
            r.pay(Invoice.PaymentType.PayPal);
        }
        
        refreshTables();
        lblInvoice.setText("Factura generada: " + r.getInvoice().toString());
        
    }//GEN-LAST:event_btnPayActionPerformed

     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPay;
    private javax.swing.JCheckBox cbCreditCard;
    private javax.swing.JCheckBox cbPaypal;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblInvoice;
    private javax.swing.JLabel lblNotPaid;
    private javax.swing.JLabel lblPaid;
    public javax.swing.JTable tableNotPaid;
    public javax.swing.JTable tablePaid;
    // End of variables declaration//GEN-END:variables
}
