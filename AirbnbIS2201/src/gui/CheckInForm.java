/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Reservation;
import model.User;


public class CheckInForm extends javax.swing.JFrame {

    private final User user;
    
    public CheckInForm(User user) {
        initComponents();
        this.user = user;
        refreshTables();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
    
    public void refreshTables(){
        //set not checked

        DefaultTableModel tableModel = (DefaultTableModel) tableNotChecked.getModel();
        tableModel.setRowCount(0);
        for (Reservation reservation : user.getReservationHistory()) {
            if (!reservation.isChecked() && (reservation.getReservationState() == Reservation.ReservationState.Paid)) {
                tableModel.addRow(new Object[]{reservation.getId(), reservation.getTotalPrice(), reservation.getLodgement().getName()});
            }
        }
        
        if (tableModel.getRowCount() == 0) {
            tableModel.addRow(new Object[] {"No hay reservas"});
        }
        
        //set checked
        tableModel = (DefaultTableModel) tableChecked.getModel();
        tableModel.setRowCount(0);
        for (Reservation reservation : user.getReservationHistory()) {
            if (reservation.isChecked()) {
                tableModel.addRow(new Object[]{reservation.getId(), reservation.getTotalPrice(), reservation.getLodgement().getName()});
            }
        }
         
        if (tableModel.getRowCount() == 0) {
            tableModel.addRow(new Object[] {"No hay reservas"});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblChecked = new javax.swing.JLabel();
        lblInvoice = new javax.swing.JLabel();
        btnCheckIn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableChecked = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableNotChecked = new javax.swing.JTable();
        lblNotChecked = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblChecked.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblChecked.setForeground(new java.awt.Color(0, 153, 0));
        lblChecked.setText("CHECKIN");

        btnCheckIn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCheckIn.setText("CheckIn");
        btnCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckInActionPerformed(evt);
            }
        });

        tableChecked.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Precio Total", "Alojamiento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableChecked);

        tableNotChecked.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Precio Total", "Alojamiento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableNotChecked);

        lblNotChecked.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblNotChecked.setForeground(new java.awt.Color(255, 153, 0));
        lblNotChecked.setText("PENDIENTES DE CHECKIN");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel2.setText("BNB");
        jLabel2.setPreferredSize(new java.awt.Dimension(907, 622));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(lblInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNotChecked))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblChecked)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(393, 393, 393)
                        .addComponent(btnCheckIn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(388, 388, 388)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNotChecked)
                    .addComponent(lblChecked))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCheckIn)
                .addGap(137, 137, 137))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckInActionPerformed

        if (tableNotChecked.getSelectedRow() == -1) {
            return;
        }

        int sel = Integer.parseInt(tableNotChecked.getValueAt(tableNotChecked.getSelectedRow(), 0).toString());
        Reservation r = user.getReservationHistory().get(sel);

        if (tableNotChecked.getSelectedRowCount() > 1) {
            JOptionPane.showMessageDialog(null, "Por favor, solo seleccione una reserva");
            return;
        }
        r.check();
        refreshTables();
        lblInvoice.setText("Se ha realizado un Check In");

    }//GEN-LAST:event_btnCheckInActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckIn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblChecked;
    private javax.swing.JLabel lblInvoice;
    private javax.swing.JLabel lblNotChecked;
    public javax.swing.JTable tableChecked;
    public javax.swing.JTable tableNotChecked;
    // End of variables declaration//GEN-END:variables
}
